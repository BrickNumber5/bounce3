body, body * {
  all: unset;
  -webkit-user-select: none;      
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

:root {
  --bg-clr: #333;
  --bg-darker: #181818;
  --bg-lighter: #484848;
  --bg-green: #484;
  --fg-clr: #ccc;
  --fg-darker: #999;
  --fg-lighter: #eee;
  --fg-cyan: #3cc;
  --fg-magenta: #c3c;
  --fg-yellow: #cc3;
  --fg-red: #c66;
  --fg-green: #6c6;
  --fg-blue: #66c;
  --mg-clr: #666;
  --mg-darker: #555;
  --mg-lighter: #777;
}

a {
  cursor: pointer;
}

body {
  background-color: var(--bg-clr);
  color: var(--fg-clr);
}

.titlecard {
  display: block;
  margin-top: 2rem;
  text-align: center;
  font-family: 'Grandstander', sans-serif;
  font-weight: 900;
  font-size: 10rem;
}

.subtitle {
  display: block;
  text-align: center;
  font-family: 'Grandstander', sans-serif;
  font-weight: 900;
  font-size: 3rem;
}

.versionnumber {
  color: var(--fg-lighter);
  font-style: italic;
}

.versionnumber .num {
  color: var(--fg-cyan);
  font-style: normal;
}

.seperator {
  color: var(--fg-lighter);
}

.versionname {
  color: var(--fg-darker);
}

.changelog a {
  color: var(--fg-blue);
}

.changelog a:hover,
.changelog a:focus {
  text-decoration: underline 0.4rem;
}

.leveltypescontainer {
  display: flex;
  margin: 1.5rem;
  gap: 1.5rem;
  flex-wrap: wrap;
}

.leveltypescontainer > div {
  flex: 1 1 40rem;
  width: 0;
}

.levels {
  display: block;
  padding-right: 1rem;
  height: 35vh;
  overflow-y: scroll;
  overflow-x: hidden;
}

.levels::-webkit-scrollbar {
  width: 1rem;
}

.levels:hover::-webkit-scrollbar-thumb {
  border-radius: 0.5rem;
  background-color: var(--fg-darker);
}

.typename {
  display: block;
  text-align: center;
  font-family: 'Grandstander', sans-serif;
  font-weight: 900;
  font-size: 5rem;
  margin-top: 3.5rem;
}

.levelpack, .levelfullwidth {
  position: relative;
  display: block;
  margin-top: 1.5rem;
  padding: 1.5rem;
  border-radius: 1.5rem;
  background-color: var(--bg-lighter);
  border-bottom: 0.75rem solid var(--bg-darker);
}

.leveltitle {
  display: block;
  font-family: 'Grandstander', sans-serif;
  font-weight: 900;
  font-size: 3rem;
  margin-top: 2rem;
  overflow-wrap: break-word;
}

.leveldisc {
  display: block;
  margin-left: 1rem;
  border-left: solid var(--fg-darker) 0.5rem;
  padding-left: 1rem;
  font-family: 'Grandstander', sans-serif;
  font-weight: 650;
  font-size: 1.5rem;
  font-style: italic;
  color: var(--fg-darker);
  overflow-wrap: break-word;
}

.levelauthor {
  display: block;
  font-family: 'Grandstander', sans-serif;
  font-weight: 550;
  font-size: 1.5rem;
  margin-top: 0.25rem;
  text-align: right;
  margin-right: 1rem;
}

.levelauthor::before {
  content: "By ";
}

.levelsmall {
  display: inline-block;
  margin: 0.25rem;
  width: 5rem;
  height: 5rem;
  font-family: 'Grandstander', sans-serif;
  font-weight: 900;
  font-size: 3rem;
  background-color: var(--fg-darker);
  color: var(--fg-lighter);
  border-radius: 1rem;
  text-align: center;
  border-bottom: 0.75rem solid var(--mg-clr);
  cursor: pointer;
}

.levelsmall.completed {
  background-color: var(--fg-clr);
  color: white;
  border-bottom: 0.75rem solid var(--bg-green);
}

.levelsmall:hover, .levelsmall:focus {
  border-bottom-width: 0.375rem;
  transform: translate( 0, 0.375rem );
  color: var(--fg-blue);
}

/* A CSS hack of sorts to make level numbers center align vertically */
.levelsmall::before {
  content: "";
  display: inline-block;
  height: 100%;
  vertical-align: middle;
}

.leveltoolbar {
  display: flex;
  justify-content: space-evenly;
  margin-top: 1rem;
}

.iconbutton {
  display: inline-block;
  width: 3.5rem;
  height: 3.5rem;
  cursor: pointer;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.iconbutton.play     { background-image: url(assets/icons/play-solid.svg);          }
.iconbutton.edit     { background-image: url(assets/icons/edit-solid.svg);          }
.iconbutton.download { background-image: url(assets/icons/file-download-solid.svg); }
.iconbutton.delete   { background-image: url(assets/icons/trash-alt-solid.svg);     }
.iconbutton.new      { background-image: url(assets/icons/plus-square-solid.svg);   }
.iconbutton.newpack  { background-image: url(assets/icons/folder-plus-solid.svg);   }
.iconbutton.upload   { background-image: url(assets/icons/file-upload-solid.svg);   }
.iconbutton.archive  { background-image: url(assets/icons/archive-solid.svg);       }
.iconbutton.copy     { background-image: url(assets/icons/copy-solid.svg);          }

.iconbutton:not(:hover):not(:focus) {
  filter: grayscale(1) brightness(10000%) brightness(75%);
}

.iconbutton:hover, .iconbutton:focus {
  animation: wiggle 0.75s infinite;
}

@keyframes wiggle {
    0% { transform: rotate(0deg);  }
   25% { transform: rotate(5deg);  }
   75% { transform: rotate(-5deg); }
  100% { transform: rotate(0deg);  }
}

.flag {
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  display: inline-block;
  width: 3.5rem;
  height: 3.5rem;
  background-image: url(assets/icons/flag-solid.svg);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  transform: rotate(10deg);
  filter: grayscale(1);
  opacity: 25%;
}

.flag.completed {
  filter: none;
  opacity: 100%;
}

.experimental {
  position: relative;
  display: inline-block;
  width: 3.5rem;
  height: 3.5rem;
  background-image: url(assets/icons/flask-solid.svg);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  vertical-align: middle
}

.experimental:hover::after {
  position: absolute;
  left: 50%;
  top: -6.5rem;
  transform: translate(-50%,0);
  content: 'This version of Bounce is experimental and may be unstable';
  display: inline-block;
  width: 15rem;
  height: 3rem;
  padding: 1rem;
  background-color: var(--bg-lighter);
  font-size: 1rem;
  border-radius: 1rem;
}

.experimental:hover:before {
  position: absolute;
  left: 50%;
  top: -2.5rem;
  content: '';
  background-color: var(--bg-lighter);
  width: 2rem;
  height: 2rem;
  transform: translate(-50%) rotate(45deg);
}

.levelstoolbar {
  display: flex;
  justify-content: space-evenly;
  margin-top: 1rem;
}

.backbutton {
  position: absolute;
  top: 0.5rem;
  left: 0.5rem;
  display: inline-block;
  width: 6rem;
  height: 6rem;
  cursor: pointer;
  background-image: url(assets/icons/reply-solid.svg);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.backbutton:hover, .backbutton:focus {
  filter: brightness(1000%);
  animation: shuffle-horz 0.75s infinite;
}

@keyframes shuffle-horz {
    0% { transform: translate(0);     }
   25% { transform: translate(3px);  }
   75% { transform: translate(-3px); }
  100% { transform: translate(0);     }
}

.gamescreen {
  display: block;
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

.restartbutton {
  position: absolute;
  top: 0.5rem;
  left: 7.5rem;
  display: inline-block;
  width: 6rem;
  height: 6rem;
  cursor: pointer;
  background-image: url(assets/icons/redo-alt-solid.svg);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.restartbutton:hover, .restartbutton:focus {
  filter: brightness(1000%);
  animation: spin 1.5s infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg);   }
   33% { transform: rotate(360deg); }
  100% { transform: rotate(360deg); }
}

.pausebutton {
  position: absolute;
  top: 0.5rem;
  left: 14.5rem;
  display: inline-block;
  width: 6rem;
  height: 6rem;
  cursor: pointer;
  background-image: url(assets/icons/pause-solid.svg);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.pausebutton:hover, .pausebutton:focus {
  filter: brightness(1000%);
  animation: squish-bounce 0.75s infinite;
}

.pausedscreen {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background-color: #0008;
}

@keyframes squish-bounce {
    0% { transform: scale(1,1);       }
   50% { transform: scale(1.05,0.95); }
  100% { transform: scale(1,1);       }
}

.playbutton {
  position: absolute;
  top: 50%;
  left: 50%;
  opacity: 75%;
  transform: translate( -50%, -50% );
  display: inline-block;
  width: 9rem;
  height: 9rem;
  cursor: pointer;
  background-image: url(assets/icons/play-solid-2.svg);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.playbutton:hover, .playbutton:focus {
  filter: brightness(1000%);
  animation: pop 0.75s infinite;
}

@keyframes pop {
    0% { transform: translate( -50%, -50% ) scale(1,1);       }
   50% { transform: translate( -50%, -50% ) scale(1.05,1.05); }
  100% { transform: translate( -50%, -50% ) scale(1,1);       }
}

.editorscreen {
  display: block;
  background-color: #358;
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

.playbuttoncorner {
  position: absolute;
  top: 0.5rem;
  left: 7.5rem;
  display: inline-block;
  width: 6rem;
  height: 6rem;
  cursor: pointer;
  background-image: url(assets/icons/play-solid-2.svg);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.playbuttoncorner:hover, .playbuttoncorner:focus {
  filter: brightness(1000%);
  animation: pop-fixed 0.75s infinite;
}

@keyframes pop-fixed {
    0% { transform: scale(1,1);       }
   50% { transform: scale(1.05,1.05); }
  100% { transform: scale(1,1);       }
}

.metadatabutton {
  position: absolute;
  top: 0.5rem;
  left: 14.5rem;
  display: inline-block;
  width: 6rem;
  height: 6rem;
  cursor: pointer;
  background-image: url(assets/icons/cog-solid.svg);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.metadatabutton:hover, .metadatabutton:focus {
  filter: brightness(1000%);
  animation: rotate-slow 0.75s linear infinite;
}

@keyframes rotate-slow {
    0% { transform: rotate(0deg);  }
  100% { transform: rotate(60deg); }
}

.savebutton {
  position: absolute;
  top: 0.5rem;
  left: 21.5rem;
  display: inline-block;
  width: 6rem;
  height: 6rem;
  cursor: pointer;
  background-image: url(assets/icons/save-solid.svg);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.savebutton:hover, .savebutton:focus {
  filter: brightness(1000%);
  animation: spin 1.5s infinite;
}

.editorToolbar {
  position: absolute;
  left: 0;
  top: 7rem;
  display: grid;
  grid-template-columns: auto auto auto;
  gap: 1rem;
  width: 11rem;
  padding: 1rem;
  background-color: #3588;
  box-shadow: #3588 0 0 0.5rem 0.5rem;
}

.editorToolButton {
  display: block;
  width: 3rem;
  height: 3rem;
  cursor: pointer;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.editorToolButton:not(:disabled):where(:hover, :focus) {
  filter: brightness(70%);
}

.editorToolButton:disabled {
  filter: brightness(60%);
  cursor: default;
}

.editorToolButton[data-tool="pan"]      { background-image: url(assets/icons/hand-paper-solid.svg);      }
.editorToolButton[data-tool="zoom"]     { background-image: url(assets/icons/search-solid.svg);          }
.editorToolButton[data-tool="adjust"]   { background-image: url(assets/icons/mouse-pointer-solid.svg);   }
.editorToolButton[data-tool="segment"]  { background-image: url(assets/icons/project-diagram-solid.svg); }
.editorToolButton[data-tool="polygon"]  { background-image: url(assets/icons/draw-polygon-solid.svg);    }
.editorToolButton[data-tool="goaltape"] { background-image: url(assets/icons/flag-checkered-solid.svg);  }
.editorToolButton[data-tool="eraser"]   { background-image: url(assets/icons/eraser-solid.svg);          }
.editorToolButton[data-tool="move"]     { background-image: url(assets/icons/arrows-alt-solid.svg);      }
.editorToolButton[data-tool="rotate"]   { background-image: url(assets/icons/sync-alt-solid.svg);        }
.editorToolButton[data-tool="reflect"]  { background-image: url(assets/icons/exchange-alt-solid.svg);    }

.metadatascreen {
  display: flex;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background-color: #0008;
  padding: 2rem;
  align-items: center;
  justify-content: center;
}

.metaleveluielem {
  width: 40rem;
}

[contenteditable] {
  cursor: text;
  /* all: unset; unsets this too */
  -webkit-user-modify: read-write-plaintext-only;
  -moz-user-modify: read-write;
}

[contenteditable]:empty::before {
  opacity: 50%;
  content: attr(data-placeholder);
}

.close {
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  display: inline-block;
  width: 3.5rem;
  height: 3.5rem;
  background-image: url(assets/icons/times-solid.svg);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  filter: grayscale(1);
  opacity: 50%;
  cursor: pointer;
}

.close:hover, .close:focus {
  filter: none;
  opacity: 100%;
}

.zoomToolbar {
  position: absolute;
  display: flex;
  justify-content: space-between;
  bottom: 0;
  left: 50%;
  transform: translate( -50%, 0 );
  width: 12rem;
  height: 5rem;
  padding: 1rem;
  background-color: #3588;
  border-top-left-radius: 1rem;
  border-top-right-radius: 1rem;
}

.zoomin, .zoomout {
  display: inline-block;
  width: 5rem;
  height: 5rem;
  cursor: pointer;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.zoomin  { background-image: url( assets/icons/search-plus-solid.svg );  }
.zoomout { background-image: url( assets/icons/search-minus-solid.svg ); }

:is( .zoomin, .zoomout ):is( :hover, :focus ) {
  filter: brightness(65%);
}

.githubButton {
  position: fixed;
  bottom: 0.5rem;
  left: 0.5rem;
  display: block;
  width: 4rem;
  height: 4rem;
  cursor: pointer;
  background-color: var(--bg-clr);
  border-radius: 100%;
  background-image: url( assets/github/GitHub-Mark-Light-64px.png );
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.githubButton:hover, .githubButton:focus {
  width: 5rem;
  height: 5rem;
}